@using DataAccess.Enums;

@model UserModel
@*Generated from Custom Template.*@
@*Model namespace using directive should be added to _ViewImports.cshtml.*@

@{
    ViewData["Title"] = "Create User";
}

<h1>@ViewData["Title"]</h1>

<h4>User</h4>
<hr />
<div class="row">
    <div class="col-12">

		@* HTML: *@
		@*<form action="/Users/Create" method="post">*@ @* default method: get *@
		@* Tag Helper Way 1: *@
        @*<form asp-action="Create" asp-controller="Users">*@
		@* Tag Helper Way 2: *@
		@* <form asp-action="Create"> *@ @* default method: post *@
		@* HTML Helper: Way 1: *@
		@* @using (Html.BeginForm("Create", "Users", FormMethod.Post)) *@
		@* HTML Helper: Way 2: *@
		@using (Html.BeginForm()) @* default method: post *@
		{
			@* 
				Controlled by ValidateAntiForgeryToken attribute above the Create post action in the controller 
				and ensures request data to be sent from only this view. 
			*@
			@Html.AntiForgeryToken()

			@* Way 1: carrying data from the action with ViewData *@
			@* @if (ViewBag.Message is not null)
			{
				<p class="text-danger">@ViewBag.Message</p>
			} *@
			@* Way 2: ModelState in the action sends data to view's validation summary *@
			@* Tag Helper: *@
            @* <div asp-validation-summary="All" class="text-danger"></div> *@
			@* HTML Helper: *@
			@Html.ValidationSummary(false, null, new { @class = "text-danger" })

            <div class="row mb-3">

				@* HTML: *@
				@* <label class="col-2 col-form-label" style="font-weight:bold">User Name</label> *@
				@* Tag Helper: *@
                @* <label asp-for="UserName" class="col-2 col-form-label" style="font-weight:bold"></label> *@
				@* HTML Helper: *@
				@Html.LabelFor(model => model.UserName, new { @class="col-2 col-form-label", style = "font-weight:bold" })

				<div class="col-5">

					@* HTML: *@
					@* <input name="UserName" type="text" class="form-control" placeholder="Enter user name..." /> *@
					@* Tag Helper: *@
					@* <input asp-for="UserName" class="form-control" placeholder="Enter user name..." /> *@
					@* HTML Helper: *@
					@Html.TextBoxFor(m => m.UserName, new { @class = "form-control", placeholder = "Enter user name..." })

					@* Tag Helper: *@
					@* <span asp-validation-for="UserName" class="text-danger"></span> *@
					@* HTML Helper: *@
					@Html.ValidationMessageFor(u => u.UserName, null, new { @class = "text-danger" })

				</div>
            </div>
            <div class="row mb-3">
                <label asp-for="Password" class="col-2 col-form-label" style="font-weight:bold"></label>
				<div class="col-5">

					@* HTML: *@
					@* <input name="Password" class="form-control" type="password" placeholder="Enter password..." /> *@
					@* Tag Helper: *@
					@* <input asp-for="Password" class="form-control" type="password" placeholder="Enter password..." /> *@
					@* HTML Helper: *@
					@Html.PasswordFor(u => u.Password, new { @class = "form-control", type = "password", placeholder = "Enter password..." })

					<span asp-validation-for="Password" class="text-danger"></span>
				</div>
            </div>
            <div class="row mb-3">
				<label asp-for="IsActive" class="col-2 col-form-label"></label>
				
				@if (User.IsInRole("admin"))
				{
					<div class="col-5" style="padding-top: 7px;">

					@* HTML: *@
					@* <input type="checkbox" name="IsActive" class="form-check-input" /> *@
					@* Tag Helper: *@
					@* <input class="form-check-input" asp-for="IsActive" /> *@
					@* HTML Helper: *@
					@Html.CheckBoxFor(model => model.IsActive, new { @class = "form-check-input" })

                </div>  
				<div class="row mb-3">
                <label asp-for="Status" class="col-2 col-form-label"></label>
				<div class="col-5">
					@* HTML Helper: *@
					<div class="form-check form-check-inline">
						@Html.RadioButton("Status", (int)Statuses.Junior, true, new { @class = "form-check-input", id = "status1" })
						@Html.Label("Status", Statuses.Junior.ToString(), new { @for = "status1" })
					</div>
					<div class="form-check form-check-inline">
						@Html.RadioButton("Status", (int)Statuses.Senior, new { @class = "form-check-input", id = "status2" })
						@Html.Label("Status", Statuses.Senior.ToString(), new { @for = "status2" })
					</div>
					<div class="form-check form-check-inline">
						@Html.RadioButton("Status", (int)Statuses.Master, new { @class = "form-check-input", id = "status3" })
						@Html.Label("Status", Statuses.Master.ToString(), new { @for = "status3" })
					</div>

					<span asp-validation-for="Status" class="text-danger"></span>
						</div> 
						<div class="row mb-3">
							<label asp-for="RoleId" class="col-2 col-form-label"></label>
							<div class="col-5">
								@* HTML Helper: *@
								@Html.DropDownListFor(m => m.RoleId, ViewData["Roles"] as SelectList, "-- Select --", new { @class = "form-select" })

								<span asp-validation-for="RoleId" class="text-danger"></span>
							</div>
						</div>
            </div>
				}
				
            </div>
         
            <div class="row mb-3">
				<div class="offset-2 col-5">
					<input type="submit" value="Save" class="btn btn-primary" />
					&nbsp;&nbsp;:
                    <button type="reset" class="btn btn-outline-primary">Reset</button>
					&nbsp;&nbsp;
					<a asp-action="GetList">Back to List</a>
				</div>
            </div>
        @* </form> *@
		}
    </div>
</div>




